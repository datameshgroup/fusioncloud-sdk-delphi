unit DataMeshGroup.Fusion.AmountsReq;

interface

uses DataMeshGroup.Fusion.Types;

type
  TAmountsReq = class
  private
    FCurrencySymbol: TCurrencySymbol;

    procedure InitProperties;
  public
    property CurrencySymbol: TCurrencySymbol read FCurrencySymbol
      write FCurrencySymbol default TCurrencySymbol.AUD;

  end;


public CurrencySymbol Currency { get; set; } = CurrencySymbol{ TAmountsReq }

.AUD;

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? RequestedAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? CashBackAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? TipAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? SurchargeAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? PaidAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? MinimumAmountDeliver { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? MaximumCashBackAmount { get; set; }

        [Newtonsoft.Json.JsonConverter(typeof(DecimalJsonConverter))]
        public decimal? MinimumSplitAmount { get; set; }
    }

implementation

procedure TAmountsReq.InitProperties;
begin
  FCurrencySymbol := TCurrencySymbol.AUD;
end;

end.
