unit DataMeshGroup.Fusion.SecurityTrailer;

interface

type
  TKeyEncryptionAlgorithm = class
  private
    FAlgorithm: string;
  public
    property Algorithm: string read FAlgorithm write FAlgorithm;
  end;

  TEncapsulatedContent = class
  private
    FContentType: string;
  public
    property ContentType: string read FContentType write FContentType;
  end;

  TMACAlgorithm = class
  private
    FAlgorithm: string;
  public
    property Algorithm: string read FAlgorithm write FAlgorithm;
  end;



public class SecurityTrailer
    {
        public string ContentType { get; set; }
        public AuthenticatedData AuthenticatedData { get; set; }
    }

    public class AuthenticatedData
    {
        public string Version { get; set; }
        public Recipient Recipient { get; set; }
    }

    public class Recipient
    {
        public KEK KEK { get; set; }
        public MACAlgorithm MACAlgorithm { get; set; }
        public EncapsulatedContent EncapsulatedContent { get; set; }
        public string MAC { get; set; }
    }

    public class KEK
    {
        public string Version { get; set; }
        public KEKIdentifier KEKIdentifier { get; set; }
        public KeyEncryptionAlgorithm KeyEncryptionAlgorithm { get; set; }
        public string EncryptedKey { get; set; }
    }

    public class KEKIdentifier
    {
        public string KeyIdentifier { get; set; }
        public string KeyVersion { get; set; }
    }




implementation

end.
